<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 太阳</title>
    <link>https://victoria-al.github.io/post/</link>
    <description>Recent content in Posts on 太阳</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 Jul 2020 22:01:08 +0800</lastBuildDate>
    
	<atom:link href="https://victoria-al.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>啊立的Spring学习笔记（二）</title>
      <link>https://victoria-al.github.io/post/spring_two/</link>
      <pubDate>Fri, 17 Jul 2020 22:01:08 +0800</pubDate>
      
      <guid>https://victoria-al.github.io/post/spring_two/</guid>
      <description>上一篇记录到Spring中IOC的主要作用和原理，接下来是IOC和DI之间的联系以及Spring对bean的管理细节。 以前我们创建对象一般是使用new构造函数来创建，现在则是交给Spring来帮我们管理对象的创建。
一、创建IOC容器的两大接口   1、ApplicationContext接口：
使用ClassPathXmlApplicationContext解析XML文件创建核心容器，创建对象采取的策略为立即加载的方式，即一读取就创建（适用于单例对象）
    2、BeanFactory接口
使用ClassPathResource和XmlBeanFactory解析XML文件创建核心容器，创建对象采取的策略为延迟加载方式，即要用到才创建（适用于多利对象）
  二、IOC与DI的联系 1、IOC控制反转是一种设计思想，DI是实现它的方式，来实现我们所要的低耦合程序；
2、它们是从不同的角度来描述同一件事情。就是说，创建容器，通过依赖关系注入对象。
三、Spring对bean的管理细节  1、创建bean的三种方式  （1）使用默认构造函数创建
（2）使用普通工厂类中的方法创建
（3）使用工厂类中的静态方法创建
 2、bean对象的作用范围   3、bean对象的生命周期  将对象交给Spring管理，方便我们之后做依赖的注入，注入的方式有通过构造函数、set方法和使用注解三种方式，注解与xml配置文件共用的方式我觉得使更为方便一些，纯注解的话需要将数据源配置、包扫描新建成配置类，代码量也蛮多的，所以我觉得二者结合，会好一些；今天先记录到这里，注入方式的内容下次再记录。加油</description>
    </item>
    
    <item>
      <title>啊立的Spring学习笔记（一）</title>
      <link>https://victoria-al.github.io/post/spring_one/</link>
      <pubDate>Mon, 13 Jul 2020 19:33:28 +0800</pubDate>
      
      <guid>https://victoria-al.github.io/post/spring_one/</guid>
      <description>Spring框架学习笔记（一） 学习Spring这段时间，一直有粗略的做着笔记，想根据做的笔记和代码，把对Spring的理解和一些概念再次记录下来，巩固一下也方便以后回看。 一、Spring简介   1、Spring是一个分层的Java SE/EE 应用的全栈轻量级框架。    2、两大内核：IOC（控制反转）和AOP（面向切面编程） 二、IOC 控制反转 原理剖析
    1、先用一组程序创建对象图来了解传统程序和使用IOC/DI容器后的程序在创建对象时的不同操作   2、程序代码实现(同个程序中修改)
  2.1 传统模式下实现  2.2 可以很明显看出，业务层实现类需要通过new操作符生成持久层对象，用户类需要通过new操作符生成业务层对象，它们之间的耦合度非常高，会导致代码的独立性很差。
2.3 创建配置文件bean.properties （resources文件夹下）
 accountDao=com.it.DAO.impl.AccountDaoImpl accountService=com.it.service.impl.AccountServiceImpl 2.4 新建BeanFactory工厂类反射创建对象
// 定义一个Properties对象 private static final Properties prop; private static final Map&amp;lt;String, Object&amp;gt; beans; // 使用静态代码块为Properties对象赋值 static { // 实例化对象 prop = new Properties(); // 获取properties文件的流对象 // 类加载器 InputStream in = BeanFactory.class.getClassLoader().getResourceAsStream(&amp;quot;bean.properties&amp;quot;); try { prop.</description>
    </item>
    
    <item>
      <title>我的Hugo个人博客搭建过程（二）</title>
      <link>https://victoria-al.github.io/post/myblog2/</link>
      <pubDate>Sat, 11 Jul 2020 22:32:03 +0800</pubDate>
      
      <guid>https://victoria-al.github.io/post/myblog2/</guid>
      <description>第一篇讲了Hugo环境的搭建和一些小问题，接下来就总结一下后来部署到远程GitHub上的步骤
一、 在GitHub上的配置  新建仓库 注意名字是用户名小写形式 + github.io    复制两段链接字段，备用   二、 新建静态页面  1、 在根目录下输入 hugo命令，成功后hugo会在根目录下创建一个public文件夹   2、 在配置文件中，将baseUrl改成 baseUrl=&amp;quot;https://victoria-ai.github.io&amp;rdquo; （这里是我新建的仓库链接，配置时注意要修改成自己的）  三、与远程GitHub建立连接  进入public文件夹，接下来是连续的git命令操作：  &amp;ndash; git init (在public文件夹下初始化一个本地仓库)
&amp;ndash; git add . （监控工作区，也就是根目录中的文件发生变化，提交给暂存区）
&amp;ndash; git commit -m &amp;ldquo;要显示的提交日志&amp;rdquo; (将暂存区改动提交到本地版本库)
&amp;ndash; git remote add origin https://github.com/Victoria-Al/victoria-ai.github.io.git
&amp;ndash; git push -u origin master (这里会要求你输入GitHub的账户密码，将public里的文件push到仓库中)
四、访问部署后的Hugo个人博客  在第一步时复制的github.io结尾的链接就是部署后的访问链接，以后可直接访问，因为现在它还是静态页面，之后可以自己尝试去配置和修改个人的博客网站  五、之后的提交博客文件操作  1、 在根目录下用终端 键入hugo命令 2 进入public文件夹，输入之前类似的提交命令（此时不用再初始化仓库和链接远程GitHub地址）  &amp;ndash; git add .</description>
    </item>
    
    <item>
      <title>我的Hugo个人博客搭建过程（一）</title>
      <link>https://victoria-al.github.io/post/myblog/</link>
      <pubDate>Sat, 11 Jul 2020 08:48:22 +0800</pubDate>
      
      <guid>https://victoria-al.github.io/post/myblog/</guid>
      <description> 一直以来觉得写自己的Blog是一件挺厉害的事情，由于自己敲代码的能力不是很好，所以也觉得不够格去写Blog，不过因为自己想尝试一下并且看到了CodeSheep（一位B站编程UP主）的一个关于个人博客搭建的教程，所以就用了一个多小时的时间，初步搭建了属于我的一个Blog网站，接下来记录一下搭建的过程以及其中自己遇到的一点小问题。
一、 下载对应版本的Hugo压缩包 1、 下载地址：[Hugo] https://github.com/gohugoio/hugo/releases（这里我下载的是v0.73.0版本）  2、 下载后解压，新建一个文件夹存放解压下来的hugo.exe文件 （这里需要添加环境变量，将hugo.exe的bin路径添加到Path里） 3、 检查安装情况，win + r 输入cmd打开终端，输入hugo version （有显示相关信息即安装成功）  二、 新建站点 在bin目录下终端输入hugo new site 站点文件夹名称  三、 安装主题 1、 下载地址：[Themes] https://themes.gohugo.io 下载自己喜欢的主题（这里我下载的是m10c，感觉还不错），进入themes文件夹，输入git命令下载  2、 配置（两种方式）和启动站点 （1）复制m10c中exampleSite的content和config.toml文件覆盖掉根目录下的content和config.toml文件  （2）在原配置文件config.toml中添加theme=&amp;quot;m10c&amp;quot;（对应的主题名称）  （3）配置主题并启动博客 进入根目录，在终端中输入 hugo server -t m10c --buildDrafts  四、 新建文件（写文章用）  在终端输入hugo new post/MyBlog.md （在content中新建post文件夹，并在post中生成MyBlog.md文件）  到这里就是搭建基本Hugo博客的内容了，还有一步是部署到远程GitHub仓库上，下次继续补充。接下来讲一下几个注意的点： 1. 在安装Hugo压缩包时，因为国内在GitHub上下载东西有时是很慢的，这里我是网上找到一个工具：FreeDownloadManager  （下载地址：[FLM] https://www.freedownloadmanager.org/zh）可以解决下载超慢的问题
2. 注意下载后要配置环境变量 PATH，不然无法在终端查找是否安装 3. 第一种配置theme的方式，要注意config.toml是否有themes=&amp;quot;xxx&amp;quot;的语句，有就删除，就可以正确启动站点，不然会找不到主题模块，无法启动  4、在博客文件上删除draft: true语句，这里我调试的时候会导致我文章没法显示出来，去掉后就可以了  </description>
    </item>
    
  </channel>
</rss>